prometheus:
  prometheusSpec:
    tolerations:
      - key: "workload"
        operator: "Equal"
        value: "monitoring"
        effect: "NoSchedule"
    nodeSelector:
      workload: monitoring
    maximumStartupDurationSeconds: 300


alertmanager:
  config:
    global:
      resolve_timeout: 5m
    route:
      group_by: ['namespace']
      group_wait: 30s
      group_interval: 5m
      repeat_interval: 12h
      receiver: 'webhook'
      routes:
        - matchers:
            - alertname = "Watchdog"
          receiver: 'webhook'
    receivers:
      - name: 'webhook'
        webhook_configs:
          - url: 'http://alert-analyzer-service.monitoring.svc.cluster.local/webhook'
    inhibit_rules:
      - source_matchers: ['severity = critical']
        target_matchers: ['severity = warning|info']
        equal: ['namespace', 'alertname']
  alertmanagerSpec:
    nodeSelector:
      workload: monitoring
    tolerations:
      - key: "workload"
        operator: "Equal"
        value: "monitoring"
        effect: "NoSchedule"

grafana:
  nodeSelector:
    workload: monitoring
  tolerations:
    - key: "workload"
      operator: "Equal"
      value: "monitoring"
      effect: "NoSchedule"
  additionalDataSources:
    - name: Loki
      type: loki
      access: proxy
      url: http://loki.monitoring.svc:3100/loki/api/v1/query_range
      isDefault: false
      editable: true

kubeStateMetrics:
  nodeSelector:
    workload: monitoring
  tolerations:
    - key: "workload"
      operator: "Equal"
      value: "monitoring"
      effect: "NoSchedule"

nodeExporter:
  nodeSelector:
    workload: monitoring
  tolerations:
    - key: "workload"
      operator: "Equal"
      value: "monitoring"
      effect: "NoSchedule"