tolerations:
  - key: "workload"
    operator: "Equal"
    value: "monitoring"
    effect: "NoSchedule"

nodeSelector:
  workload: monitoring

config:
  lokiAddress: http://loki-gateway.monitoring.svc.cluster.local/loki/api/v1/push

  snippets:
    pipelineStages:
      - docker: {}
      - cri: {}
    extraScrapeConfigs: |
      - job_name: kubernetes-pods
        static_configs:
          - targets:
              - localhost
            labels:
              job: varlogs
              __path__: /var/log/containers/*.log

    extraRelabelConfigs:
      - source_labels: [__meta_kubernetes_pod_node_name]
        target_label: __host__
      - source_labels: [__meta_kubernetes_namespace]
        regex: default
        action: keep

    # Reduce verbosity
    client:
      backoff_config:
        max_period: 5s
        max_retries: 3

# Tell Promtail to watch pod logs in Kubernetes
extraVolumes:
  - name: varlog
    hostPath:
      path: /var/log
  - name: containers
    hostPath:
      path: /var/lib/docker/containers

extraVolumeMounts:
  - name: varlog
    mountPath: /var/log
  - name: containers
    mountPath: /var/lib/docker/containers

# Run as DaemonSet on all nodes
daemonset:
  enabled: true

# ServiceMonitor to let Prometheus scrape Promtail metrics
serviceMonitor:
  enabled: true
  labels:
    release: kube-prometheus-stack
